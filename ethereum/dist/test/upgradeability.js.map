{"version":3,"file":"upgradeability.js","sourceRoot":"","sources":["../../test/upgradeability.ts"],"names":[],"mappings":";;AAWA,6CAAwC;AAExC,MAAM,EAAE,GAA+B,SAAS,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;AAC/E,MAAM,GAAG,GAAqB,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AAC5D,MAAM,GAAG,GAAgB,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAClD,MAAM,GAAG,GAAqC,SAAS,CAAC,OAAO,CAC7D,0BAA0B,CAC3B,CAAC;AAEF,QAAQ,CAAC,uBAAuB,EAAE,KAAK,EAAC,QAAQ,EAAC,EAAE;IACjD,EAAE,CAAC,aAAa,EAAE,KAAK,IAAI,EAAE;QAC3B,MAAM,UAAU,GAA+B,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC;QAC9D,MAAM,WAAW,GAAqB,MAAM,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACxE,MAAM,WAAW,GAAgB,MAAM,GAAG,CAAC,GAAG,EAAE,CAAC;QAEjD,MAAM,WAAW,GAAqC,MAAM,GAAG,CAAC,GAAG,EAAE,CAAC;QAEtE,MAAM,IAAI,GAAG,uBAAU,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;QAE1E,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAElB,MAAM,CAAC,IAAI,CACT,MAAM,WAAW,CAAC,gBAAgB,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,EAAE;YAC5D,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;SAClB,CAAC,CACH,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import {\n  DTXTokenContract,\n  DTXTokenInstance,\n  DXCContract,\n  DXCInstance,\n  MiniMeTokenFactoryContract,\n  MiniMeTokenFactoryInstance,\n  OwnedUpgradeabilityProxyContract,\n  OwnedUpgradeabilityProxyInstance,\n} from '../types/truffle-contracts';\n\nimport {encodeCall} from './encodeCall';\n\nconst TF: MiniMeTokenFactoryContract = artifacts.require('MiniMeTokenFactory');\nconst DTX: DTXTokenContract = artifacts.require('DTXToken');\nconst DXC: DXCContract = artifacts.require('DXC');\nconst OUP: OwnedUpgradeabilityProxyContract = artifacts.require(\n  'OwnedUpgradeabilityProxy'\n);\n\ncontract('Upgradeability of DXC', async accounts => {\n  it('test case 1', async () => {\n    const tfInstance: MiniMeTokenFactoryInstance = await TF.new();\n    const dtxInstance: DTXTokenInstance = await DTX.new(tfInstance.address);\n    const dxcInstance: DXCInstance = await DXC.new();\n    \n    const oUPinstance: OwnedUpgradeabilityProxyInstance = await OUP.new();\n\n    const data = encodeCall('initialize', ['address'], [dtxInstance.address]);\n\n    console.log(data);\n\n    assert.isOk(\n      await oUPinstance.upgradeToAndCall(dxcInstance.address, data, {\n        from: accounts[0],\n      })\n    );\n  });\n});\n"]}