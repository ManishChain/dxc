{
  "contractName": "TokenUpgrade",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "burner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.13+commit.5b0b510c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Version 1 of a token to show upgradeability. The idea here is to extend a token behaviour providing burnable functionalities in addition to what's provided in version 0\",\"methods\":{\"owner()\":{\"details\":\"Tells the address of the owner\",\"return\":\"the address of the owner\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"Token_V1\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/adrienblavier/Documents/settlemint/dxc/ethereum/contracts/testcontracts/TokenUpgrade.sol\":\"TokenUpgrade\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/adrienblavier/Documents/settlemint/dxc/ethereum/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x4062327d0234be09a79d469c0451b9fbe49abad477d2cbcf937cb60671808991\",\"urls\":[\"bzz-raw://745f49b62f8b2a2aa6cf51776b2dae62e13cf91482e486d51eb366fae8dbac38\",\"dweb:/ipfs/QmU2qqyrwUeRRX1vuA3h5ZZKEaHg1Q69b1wnyjCyTDtNTA\"]},\"/Users/adrienblavier/Documents/settlemint/dxc/ethereum/contracts/testcontracts/Token.sol\":{\"keccak256\":\"0x7e52b0544e7cc374a7fe298ca12df5c90749931fec4fc532d36ab14c6eb556b0\",\"urls\":[\"bzz-raw://6b02a292ded890800c827d313c2dc959db824ed4d1f6c7f14a700449b37007fd\",\"dweb:/ipfs/QmU9bKFDE2rPeT1arUkpenw2963xgn9EuSoiRS2kgfiNtR\"]},\"/Users/adrienblavier/Documents/settlemint/dxc/ethereum/contracts/testcontracts/TokenUpgrade.sol\":{\"keccak256\":\"0x32fb366c7b5363f1677505968c800cce7c61d18b0284c8471828281934f2ce45\",\"urls\":[\"bzz-raw://3bc3a2a26a1626e1fab19b0d75c215ebf469542d5d0c237e4dd8d9bd2986d72b\",\"dweb:/ipfs/QmPx4MjxfBWepwQ8iNQRuaNCrRugs5vYWs532pWtj3p8Dt\"]},\"/Users/adrienblavier/Documents/settlemint/dxc/ethereum/contracts/utils/SafeMath.sol\":{\"keccak256\":\"0xb4b75742f99cd5f299c9bc25997e5f5f3bf9bc2b8d3ddba759a55e06dde59b3c\",\"urls\":[\"bzz-raw://a7a7812e58ce97ef629a68ba760bcbe0676edb9f27bb877be7fdaf04b61d296c\",\"dweb:/ipfs/QmUXWTLToUR8stKFcPfR1oFHJgUUzr7ECX4UH7SwP417Cw\"]}},\"version\":1}",
  "bytecode": "0x60806040526100163364010000000061001b810204565b61003d565b60008054600160a060020a031916600160a060020a0392909216919091179055565b610bc88061004c6000396000f3fe608060405234801561001057600080fd5b50600436106100ec576000357c01000000000000000000000000000000000000000000000000000000009004806370a08231116100a9578063c4d66de811610083578063c4d66de81461026e578063d73dd62314610294578063dd62ed3e146102c0578063f2fde38b146102ee576100ec565b806370a08231146101f85780638da5cb5b1461021e578063a9059cbb14610242576100ec565b8063095ea7b3146100f157806318160ddd1461011f57806323b872dd1461013957806340c10f191461018357806342966c68146101af57806366188463146101cc575b600080fd5b61011d6004803603604081101561010757600080fd5b50600160a060020a038135169060200135610314565b005b610127610376565b60408051918252519081900360200190f35b61016f6004803603606081101561014f57600080fd5b50600160a060020a0381358116916020810135909116906040013561037c565b604080519115158252519081900360200190f35b61011d6004803603604081101561019957600080fd5b50600160a060020a0381351690602001356104f3565b61011d600480360360208110156101c557600080fd5b50356105b5565b61011d600480360360408110156101e257600080fd5b50600160a060020a038135169060200135610649565b6101276004803603602081101561020e57600080fd5b5035600160a060020a0316610734565b61022661074f565b60408051600160a060020a039092168252519081900360200190f35b61016f6004803603604081101561025857600080fd5b50600160a060020a03813516906020013561075e565b61011d6004803603602081101561028457600080fd5b5035600160a060020a031661083f565b61011d600480360360408110156102aa57600080fd5b50600160a060020a0381351690602001356108a8565b610127600480360360408110156102d657600080fd5b50600160a060020a038135811691602001351661093c565b61011d6004803603602081101561030457600080fd5b5035600160a060020a0316610967565b336000818152600360209081526040808320600160a060020a03871680855290835292819020859055805185815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35050565b60015490565b6000600160a060020a03831661039157600080fd5b600160a060020a0384166000908152600260205260409020548211156103b657600080fd5b600160a060020a03841660009081526003602090815260408083203384529091529020548211156103e657600080fd5b600160a060020a03841660009081526002602052604090205461040f908363ffffffff6109f616565b600160a060020a038086166000908152600260205260408082209390935590851681522054610444908363ffffffff610a3f16565b600160a060020a038085166000908152600260209081526040808320949094559187168152600382528281203382529091522054610488908363ffffffff6109f616565b600160a060020a03808616600081815260036020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b6104fb61074f565b600160a060020a031633600160a060020a03161461051857600080fd5b600160a060020a038216600090815260026020526040902054610541908263ffffffff610a3f16565b600160a060020a03831660009081526002602052604090205560015461056d908263ffffffff610a3f16565b600155604080518281529051600160a060020a038416916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b806105bf33610734565b10156105ca57600080fd5b336000908152600260205260409020546105ea908263ffffffff6109f616565b3360009081526002602052604090205560015461060d908263ffffffff6109f616565b60015560408051828152905133917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a250565b336000908152600360209081526040808320600160a060020a03861684529091529020548082111561069e57336000908152600360209081526040808320600160a060020a03871684529091528120556106d3565b6106ae818363ffffffff6109f616565b336000908152600360209081526040808320600160a060020a03881684529091529020555b336000818152600360209081526040808320600160a060020a0388168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a3505050565b600160a060020a031660009081526002602052604090205490565b600054600160a060020a031690565b6000600160a060020a03831661077357600080fd5b3360009081526002602052604090205482111561078f57600080fd5b336000908152600260205260409020546107af908363ffffffff6109f616565b3360009081526002602052604080822092909255600160a060020a038516815220546107e1908363ffffffff610a3f16565b600160a060020a0384166000818152600260209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b60005474010000000000000000000000000000000000000000900460ff161561086757600080fd5b61087081610ab3565b506000805474ff0000000000000000000000000000000000000000191674010000000000000000000000000000000000000000179055565b336000908152600360209081526040808320600160a060020a03861684529091529020546108dc908263ffffffff610a3f16565b336000818152600360209081526040808320600160a060020a0388168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a35050565b600160a060020a03918216600090815260036020908152604080832093909416825291909152205490565b61096f61074f565b600160a060020a031633600160a060020a03161461098c57600080fd5b600160a060020a03811661099f57600080fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06109c861074f565b60408051600160a060020a03928316815291841660208301528051918290030190a16109f381610ab3565b50565b6000610a3883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ae2565b9392505050565b600082820183811015610a3857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008184841115610b8b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b50578181015183820152602001610b38565b50505050905090810190601f168015610b7d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fea265627a7a723158208fec4fd78fef4d4406ef127e3eb1e5e89063438030589234e0361bbcb1aba28464736f6c634300050d0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ec576000357c01000000000000000000000000000000000000000000000000000000009004806370a08231116100a9578063c4d66de811610083578063c4d66de81461026e578063d73dd62314610294578063dd62ed3e146102c0578063f2fde38b146102ee576100ec565b806370a08231146101f85780638da5cb5b1461021e578063a9059cbb14610242576100ec565b8063095ea7b3146100f157806318160ddd1461011f57806323b872dd1461013957806340c10f191461018357806342966c68146101af57806366188463146101cc575b600080fd5b61011d6004803603604081101561010757600080fd5b50600160a060020a038135169060200135610314565b005b610127610376565b60408051918252519081900360200190f35b61016f6004803603606081101561014f57600080fd5b50600160a060020a0381358116916020810135909116906040013561037c565b604080519115158252519081900360200190f35b61011d6004803603604081101561019957600080fd5b50600160a060020a0381351690602001356104f3565b61011d600480360360208110156101c557600080fd5b50356105b5565b61011d600480360360408110156101e257600080fd5b50600160a060020a038135169060200135610649565b6101276004803603602081101561020e57600080fd5b5035600160a060020a0316610734565b61022661074f565b60408051600160a060020a039092168252519081900360200190f35b61016f6004803603604081101561025857600080fd5b50600160a060020a03813516906020013561075e565b61011d6004803603602081101561028457600080fd5b5035600160a060020a031661083f565b61011d600480360360408110156102aa57600080fd5b50600160a060020a0381351690602001356108a8565b610127600480360360408110156102d657600080fd5b50600160a060020a038135811691602001351661093c565b61011d6004803603602081101561030457600080fd5b5035600160a060020a0316610967565b336000818152600360209081526040808320600160a060020a03871680855290835292819020859055805185815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35050565b60015490565b6000600160a060020a03831661039157600080fd5b600160a060020a0384166000908152600260205260409020548211156103b657600080fd5b600160a060020a03841660009081526003602090815260408083203384529091529020548211156103e657600080fd5b600160a060020a03841660009081526002602052604090205461040f908363ffffffff6109f616565b600160a060020a038086166000908152600260205260408082209390935590851681522054610444908363ffffffff610a3f16565b600160a060020a038085166000908152600260209081526040808320949094559187168152600382528281203382529091522054610488908363ffffffff6109f616565b600160a060020a03808616600081815260036020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b6104fb61074f565b600160a060020a031633600160a060020a03161461051857600080fd5b600160a060020a038216600090815260026020526040902054610541908263ffffffff610a3f16565b600160a060020a03831660009081526002602052604090205560015461056d908263ffffffff610a3f16565b600155604080518281529051600160a060020a038416916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b806105bf33610734565b10156105ca57600080fd5b336000908152600260205260409020546105ea908263ffffffff6109f616565b3360009081526002602052604090205560015461060d908263ffffffff6109f616565b60015560408051828152905133917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a250565b336000908152600360209081526040808320600160a060020a03861684529091529020548082111561069e57336000908152600360209081526040808320600160a060020a03871684529091528120556106d3565b6106ae818363ffffffff6109f616565b336000908152600360209081526040808320600160a060020a03881684529091529020555b336000818152600360209081526040808320600160a060020a0388168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a3505050565b600160a060020a031660009081526002602052604090205490565b600054600160a060020a031690565b6000600160a060020a03831661077357600080fd5b3360009081526002602052604090205482111561078f57600080fd5b336000908152600260205260409020546107af908363ffffffff6109f616565b3360009081526002602052604080822092909255600160a060020a038516815220546107e1908363ffffffff610a3f16565b600160a060020a0384166000818152600260209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b60005474010000000000000000000000000000000000000000900460ff161561086757600080fd5b61087081610ab3565b506000805474ff0000000000000000000000000000000000000000191674010000000000000000000000000000000000000000179055565b336000908152600360209081526040808320600160a060020a03861684529091529020546108dc908263ffffffff610a3f16565b336000818152600360209081526040808320600160a060020a0388168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a35050565b600160a060020a03918216600090815260036020908152604080832093909416825291909152205490565b61096f61074f565b600160a060020a031633600160a060020a03161461098c57600080fd5b600160a060020a03811661099f57600080fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06109c861074f565b60408051600160a060020a03928316815291841660208301528051918290030190a16109f381610ab3565b50565b6000610a3883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ae2565b9392505050565b600082820183811015610a3857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008184841115610b8b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b50578181015183820152602001610b38565b50505050905090810190601f168015610b7d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fea265627a7a723158208fec4fd78fef4d4406ef127e3eb1e5e89063438030589234e0361bbcb1aba28464736f6c634300050d0032",
  "sourceMap": "259:317:3:-;;;762:20:1;771:10;762:8;;;;:20;:::i;:::-;259:317:3;;1004:73:1;1055:6;:17;;-1:-1:-1;;;;;;1055:17:1;-1:-1:-1;;;;;1055:17:1;;;;;;;;;;1004:73::o;259:317:3:-;;;;;;;",
  "deployedSourceMap": "259:317:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;259:317:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1787:154:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1787:154:2;;;;;;;;:::i;:::-;;703:83;;;:::i;:::-;;;;;;;;;;;;;;;;1342:441;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1342:441:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;2575:195;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2575:195:2;;;;;;;;:::i;348:226:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;348:226:3;;:::i;2187:384:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2187:384:2;;;;;;;;:::i;790:98::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;790:98:2;-1:-1:-1;;;;;790:98:2;;:::i;882:71:1:-;;;:::i;:::-;;;;-1:-1:-1;;;;;882:71:1;;;;;;;;;;;;;;1022:316:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1022:316:2;;;;;;;;:::i;578:121::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;578:121:2;-1:-1:-1;;;;;578:121:2;;:::i;1945:238::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1945:238:2;;;;;;;;:::i;892:126::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;892:126:2;;;;;;;;;;:::i;1238:178:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1238:178:1;-1:-1:-1;;;;;1238:178:1;;:::i;1787:154:2:-;1861:10;1849:23;;;;:11;:23;;;;;;;;-1:-1:-1;;;;;1849:32:2;;;;;;;;;;;;:40;;;1900:36;;;;;;;1849:32;;1861:10;1900:36;;;;;;;;;;;1787:154;;:::o;703:83::-;769:12;;703:83;:::o;1342:441::-;1421:4;-1:-1:-1;;;;;1441:16:2;;1433:25;;;;;;-1:-1:-1;;;;;1481:15:2;;;;;;:9;:15;;;;;;1472:24;;;1464:33;;;;;;-1:-1:-1;;;;;1520:17:2;;;;;;:11;:17;;;;;;;;1538:10;1520:29;;;;;;;;1511:38;;;1503:47;;;;;;-1:-1:-1;;;;;1575:15:2;;;;;;:9;:15;;;;;;:26;;1595:5;1575:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;1557:15:2;;;;;;;:9;:15;;;;;;:44;;;;1623:13;;;;;;;:24;;1641:5;1623:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;1607:13:2;;;;;;;:9;:13;;;;;;;;:40;;;;1685:17;;;;;:11;:17;;;;;1703:10;1685:29;;;;;;;:40;;1719:5;1685:40;:33;:40;:::i;:::-;-1:-1:-1;;;;;1653:17:2;;;;;;;:11;:17;;;;;;;;1671:10;1653:29;;;;;;;;:72;;;;1736:25;;;;;;;;;;;1653:17;;1736:25;;;;;;;;;;;-1:-1:-1;1774:4:2;1342:441;;;;;:::o;2575:195::-;610:7:1;:5;:7::i;:::-;-1:-1:-1;;;;;596:21:1;:10;-1:-1:-1;;;;;596:21:1;;588:30;;;;;;-1:-1:-1;;;;;2655:13:2;;;;;;:9;:13;;;;;;:24;;2673:5;2655:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;2639:13:2;;;;;;:9;:13;;;;;:40;2700:12;;:23;;2717:5;2700:23;:16;:23;:::i;:::-;2685:12;:38;2734:31;;;;;;;;-1:-1:-1;;;;;2734:31:2;;;2751:1;;2734:31;;;;;;;;;2575:195;;:::o;348:226:3:-;423:5;398:21;408:10;398:9;:21::i;:::-;:30;;390:39;;;;;;469:10;459:21;;;;:9;:21;;;;;;:32;;485:5;459:32;:25;:32;:::i;:::-;445:10;435:21;;;;:9;:21;;;;;:56;512:12;;:23;;529:5;512:23;:16;:23;:::i;:::-;497:12;:38;546:23;;;;;;;;551:10;;546:23;;;;;;;;;;348:226;:::o;2187:384:2:-;2299:10;2268:16;2287:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;2287:32:2;;;;;;;;;;2329:26;;;2325:168;;;2377:10;2400:1;2365:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;2365:32:2;;;;;;;;;:36;2325:168;;;2457:29;:8;2470:15;2457:29;:12;:29;:::i;:::-;2434:10;2422:23;;;;:11;:23;;;;;;;;-1:-1:-1;;;;;2422:32:2;;;;;;;;;:64;2325:168;2512:10;2533:23;;;;:11;:23;;;;;;;;-1:-1:-1;;;;;2503:63:2;;2533:32;;;;;;;;;;;2503:63;;;;;;;;;2512:10;2503:63;;;;;;;;;;;2187:384;;;:::o;790:98::-;-1:-1:-1;;;;;867:16:2;845:7;867:16;;;:9;:16;;;;;;;790:98::o;882:71:1:-;920:7;942:6;-1:-1:-1;;;;;942:6:1;882:71;:::o;1022:316:2:-;1083:4;-1:-1:-1;;;;;1103:16:2;;1095:25;;;;;;1153:10;1143:21;;;;:9;:21;;;;;;1134:30;;;1126:39;;;;;;1206:10;1196:21;;;;:9;:21;;;;;;:32;;1222:5;1196:32;:25;:32;:::i;:::-;1182:10;1172:21;;;;:9;:21;;;;;;:56;;;;-1:-1:-1;;;;;1250:13:2;;;;;;:24;;1268:5;1250:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;1234:13:2;;;;;;:9;:13;;;;;;;;;:40;;;;1285:31;;;;;;;1234:13;;1294:10;;1285:31;;;;;;;;;;-1:-1:-1;1329:4:2;1022:316;;;;:::o;578:121::-;635:12;;;;;;;634:13;626:22;;;;;;654:15;663:5;654:8;:15::i;:::-;-1:-1:-1;675:12:2;:19;;-1:-1:-1;;675:19:2;;;;;578:121::o;1945:238::-;2068:10;2056:23;;;;:11;:23;;;;;;;;-1:-1:-1;;;;;2056:32:2;;;;;;;;;;:48;;2093:10;2056:48;:36;:48;:::i;:::-;2033:10;2021:23;;;;:11;:23;;;;;;;;-1:-1:-1;;;;;2021:32:2;;;;;;;;;;;;:83;;;2115:63;;;;;;2021:32;;2115:63;;;;;;;;;;;1945:238;;:::o;892:126::-;-1:-1:-1;;;;;986:18:2;;;964:7;986:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;892:126::o;1238:178:1:-;610:7;:5;:7::i;:::-;-1:-1:-1;;;;;596:21:1;:10;-1:-1:-1;;;;;596:21:1;;588:30;;;;;;-1:-1:-1;;;;;1314:22:1;;1306:31;;;;;;1348:39;1369:7;:5;:7::i;:::-;1348:39;;;-1:-1:-1;;;;;1348:39:1;;;;;;;;;;;;;;;;;;;;;1393:18;1402:8;1393;:18::i;:::-;1238:178;:::o;1237:128:7:-;1295:7;1317:43;1321:1;1324;1317:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1310:50;1237:128;-1:-1:-1;;;1237:128:7:o;823:162::-;881:7;908:5;;;927:6;;;;919:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1004:73:1;1055:6;:17;;-1:-1:-1;;1055:17:1;-1:-1:-1;;;;;1055:17:1;;;;;;;;;;1004:73::o;1675:173:7:-;1761:7;1792:12;1784:6;;;;1776:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1776:29:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1823:5:7;;;1675:173::o",
  "source": "pragma solidity ^0.5.11;\n\nimport \"./Token.sol\";\n\n/**\n * @title Token_V1\n * @dev Version 1 of a token to show upgradeability.\n * The idea here is to extend a token behaviour providing burnable functionalities\n * in addition to what's provided in version 0\n */\ncontract TokenUpgrade is Token {\n  event Burn(address indexed burner, uint256 value);\n\n  function burn(uint256 value) public {\n    require(balanceOf(msg.sender) >= value);\n    _balances[msg.sender] = _balances[msg.sender].sub(value);\n    _totalSupply = _totalSupply.sub(value);\n    emit Burn(msg.sender, value);\n  }\n}",
  "sourcePath": "/Users/adrienblavier/Documents/settlemint/dxc/ethereum/contracts/testcontracts/TokenUpgrade.sol",
  "ast": {
    "absolutePath": "/Users/adrienblavier/Documents/settlemint/dxc/ethereum/contracts/testcontracts/TokenUpgrade.sol",
    "exportedSymbols": {
      "TokenUpgrade": [
        582
      ]
    },
    "id": 583,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 531,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/Users/adrienblavier/Documents/settlemint/dxc/ethereum/contracts/testcontracts/Token.sol",
        "file": "./Token.sol",
        "id": 532,
        "nodeType": "ImportDirective",
        "scope": 583,
        "sourceUnit": 530,
        "src": "26:21:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 533,
              "name": "Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 529,
              "src": "284:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Token_$529",
                "typeString": "contract Token"
              }
            },
            "id": 534,
            "nodeType": "InheritanceSpecifier",
            "src": "284:5:3"
          }
        ],
        "contractDependencies": [
          135,
          529
        ],
        "contractKind": "contract",
        "documentation": "@title Token_V1\n@dev Version 1 of a token to show upgradeability.\nThe idea here is to extend a token behaviour providing burnable functionalities\nin addition to what's provided in version 0",
        "fullyImplemented": true,
        "id": 582,
        "linearizedBaseContracts": [
          582,
          529,
          135
        ],
        "name": "TokenUpgrade",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 540,
            "name": "Burn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 536,
                  "indexed": true,
                  "name": "burner",
                  "nodeType": "VariableDeclaration",
                  "scope": 540,
                  "src": "305:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 535,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "305:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 538,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 540,
                  "src": "329:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 537,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "329:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "304:39:3"
            },
            "src": "294:50:3"
          },
          {
            "body": {
              "id": 580,
              "nodeType": "Block",
              "src": "384:190:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 547,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 999,
                                "src": "408:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 548,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "408:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 546,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 213,
                            "src": "398:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "398:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 550,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 542,
                          "src": "423:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "398:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 545,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1002,
                        1003
                      ],
                      "referencedDeclaration": 1002,
                      "src": "390:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "390:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 553,
                  "nodeType": "ExpressionStatement",
                  "src": "390:39:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 554,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 168,
                        "src": "435:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 557,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 555,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 999,
                          "src": "445:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "445:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "435:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 563,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 542,
                          "src": "485:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 558,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 168,
                            "src": "459:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 561,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 559,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 999,
                              "src": "469:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "469:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "459:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 840,
                        "src": "459:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "459:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "435:56:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 566,
                  "nodeType": "ExpressionStatement",
                  "src": "435:56:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 567,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 164,
                      "src": "497:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 570,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 542,
                          "src": "529:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 568,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 164,
                          "src": "512:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 840,
                        "src": "512:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "512:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "497:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 573,
                  "nodeType": "ExpressionStatement",
                  "src": "497:38:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 575,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 999,
                          "src": "551:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "551:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 577,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 542,
                        "src": "563:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 574,
                      "name": "Burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 540,
                      "src": "546:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "546:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 579,
                  "nodeType": "EmitStatement",
                  "src": "541:28:3"
                }
              ]
            },
            "documentation": null,
            "id": 581,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 542,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 581,
                  "src": "362:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 541,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "362:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "361:15:3"
            },
            "returnParameters": {
              "id": 544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "384:0:3"
            },
            "scope": 582,
            "src": "348:226:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 583,
        "src": "259:317:3"
      }
    ],
    "src": "0:576:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/adrienblavier/Documents/settlemint/dxc/ethereum/contracts/testcontracts/TokenUpgrade.sol",
    "exportedSymbols": {
      "TokenUpgrade": [
        582
      ]
    },
    "id": 583,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 531,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/Users/adrienblavier/Documents/settlemint/dxc/ethereum/contracts/testcontracts/Token.sol",
        "file": "./Token.sol",
        "id": 532,
        "nodeType": "ImportDirective",
        "scope": 583,
        "sourceUnit": 530,
        "src": "26:21:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 533,
              "name": "Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 529,
              "src": "284:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Token_$529",
                "typeString": "contract Token"
              }
            },
            "id": 534,
            "nodeType": "InheritanceSpecifier",
            "src": "284:5:3"
          }
        ],
        "contractDependencies": [
          135,
          529
        ],
        "contractKind": "contract",
        "documentation": "@title Token_V1\n@dev Version 1 of a token to show upgradeability.\nThe idea here is to extend a token behaviour providing burnable functionalities\nin addition to what's provided in version 0",
        "fullyImplemented": true,
        "id": 582,
        "linearizedBaseContracts": [
          582,
          529,
          135
        ],
        "name": "TokenUpgrade",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 540,
            "name": "Burn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 536,
                  "indexed": true,
                  "name": "burner",
                  "nodeType": "VariableDeclaration",
                  "scope": 540,
                  "src": "305:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 535,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "305:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 538,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 540,
                  "src": "329:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 537,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "329:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "304:39:3"
            },
            "src": "294:50:3"
          },
          {
            "body": {
              "id": 580,
              "nodeType": "Block",
              "src": "384:190:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 547,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 999,
                                "src": "408:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 548,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "408:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 546,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 213,
                            "src": "398:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "398:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 550,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 542,
                          "src": "423:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "398:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 545,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1002,
                        1003
                      ],
                      "referencedDeclaration": 1002,
                      "src": "390:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "390:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 553,
                  "nodeType": "ExpressionStatement",
                  "src": "390:39:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 554,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 168,
                        "src": "435:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 557,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 555,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 999,
                          "src": "445:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "445:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "435:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 563,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 542,
                          "src": "485:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 558,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 168,
                            "src": "459:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 561,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 559,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 999,
                              "src": "469:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "469:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "459:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 840,
                        "src": "459:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "459:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "435:56:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 566,
                  "nodeType": "ExpressionStatement",
                  "src": "435:56:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 567,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 164,
                      "src": "497:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 570,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 542,
                          "src": "529:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 568,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 164,
                          "src": "512:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 840,
                        "src": "512:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "512:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "497:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 573,
                  "nodeType": "ExpressionStatement",
                  "src": "497:38:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 575,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 999,
                          "src": "551:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "551:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 577,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 542,
                        "src": "563:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 574,
                      "name": "Burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 540,
                      "src": "546:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "546:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 579,
                  "nodeType": "EmitStatement",
                  "src": "541:28:3"
                }
              ]
            },
            "documentation": null,
            "id": 581,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 542,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 581,
                  "src": "362:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 541,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "362:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "361:15:3"
            },
            "returnParameters": {
              "id": 544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "384:0:3"
            },
            "scope": 582,
            "src": "348:226:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 583,
        "src": "259:317:3"
      }
    ],
    "src": "0:576:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.13+commit.5b0b510c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.19",
  "updatedAt": "2020-01-15T09:16:42.927Z",
  "devdoc": {
    "details": "Version 1 of a token to show upgradeability. The idea here is to extend a token behaviour providing burnable functionalities in addition to what's provided in version 0",
    "methods": {
      "owner()": {
        "details": "Tells the address of the owner",
        "return": "the address of the owner"
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "Token_V1"
  },
  "userdoc": {
    "methods": {}
  }
}